server:
  shutdown: graceful
  forward-headers-strategy: framework
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5

spring:
  application:
    name: elastic-query
  lifecycle:
    timeout-per-shutdown-phase: 15s

  jpa:
    open-in-view: false
    show-sql: true
  datasource:
    url: jdbc:postgresql://twitter-postgres:5432/postgres?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true
    username: postgres
    password: admin
    hikari:
      connection-timeout: 2000 #ms
      maximum-pool-size: 5
  sql:
    init:
      mode: ALWAYS
      schema-locations: classpath:init-schema.sql,classpath:init-data.sql


  keycloak:
    server-url: http://keycloak-server:8080
    server-external-url: https://keycloak.greeta.net
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${spring.keycloak.server-external-url}/realms/twitter-realm
          jwk-set-uri: ${spring.keycloak.server-url}/realms/twitter-realm/protocol/openid-connect/certs

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
  level:
    net.greeta.twitter: DEBUG
    org.springframework.cloud.kubernetes: TRACE
    org.springframework.security: DEBUG

info:
  system: Elastic Query Service

jwt:
  auth:
    converter:
      resource-id: twitter-app
      principal-attribute: preferred_username

management:
  endpoints:
    web:
      exposure:
        include: bindings, configprops, env, flyway, functions, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


openapi:
  oauthflow:
    authServerUrl: ${spring.keycloak.server-external-url}
    realm: twitter-realm


elastic-query-service:
  version: v1
  custom-audience: elastic-query-service
  webclient:
    connect-timeout-ms: 10000
    read-timeout-ms: 10000
    write-timeout-ms: 10000
    max-in-memory-size: 10485760 # 10MB
    content-type: 'application/vnd.api.v1+json'
    accept-type: 'application/vnd.api.v1+json'
    query-type: 'ANALYTICS_DATABASE'
  query-from-kafka-state-store:
    method: GET
    uri: "http://gateway:8080/kafka-streams/get-word-count-by-word/{word}"
    accept: ${elastic-query-service.webclient.accept-type}
  query-from-analytics-database:
    method: GET
    uri: "http://gateway:8080/analytics/get-word-count-by-word/{word}"
    accept: ${elastic-query-service.webclient.accept-type}


elastic-query-config:
  text-field: text

elastic-config:
  index-name: twitter-index
  connection-url: http://elastic-query:8080
  connect-timeout-ms: 5000
  socket-timeout-ms: 30000